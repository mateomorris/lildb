{"id":"databases","title":"Databases","content":[{"id":"ayoib","width":"fullwidth","columns":[{"id":"ef1gq","size":"w-full","rows":[{"type":"component","id":"51joo","symbolID":null,"value":{"raw":{"html":"<div \n     class=\"bg-gray-900 text-gray-100 py-8 mb-8\" \n     x-data=\"gistsData()\"  \n     x-init=\"init()\"\n>\n    <div class=\"container\">\n      <header class=\"flex items-center mb-3\">\n       <h1 class=\"font-bold flex-grow\">lildb</h1>\n        <button\n           class=\"py-2 px-4 rounded bg-blue-900 flex-grow-0\"\n           type=\"button\"\n           x-on:click=\"reload()\"\n        >\n         Reload\n        </button>   \n      </header>\n\n      <ul class=\"grid grid-cols-4 lg:grid-cols-8 gap-3\">\n        <template x-for=\"gist in gists\" :key=\"gist.label\">\n          <li class=\"bg-gray-800 p-4 text-xl font-bold rounded shadow flex flex-col\">\n            <span x-text=\"gist.label\"></span>\n            <span x-text=\"gist.type\" class=\"text-xs font-medium mb-2\"></span>\n            <span x-text=\"gist.value\" class=\"text-5xl\"></span>\n          </li>\n        </template>\n          <li class=\"bg-gray-800 text-xl font-bold rounded shadow flex flex-col hover:bg-gray-700 transition-colors duration-100\">\n            <button @click=\"addItem()\" class=\"text-gray-200 h-full text-sm font-semibold transition-colors duration-100\">+ new</button>\n          </li>\n      </ul>\n    </div>\n</div>\n","css":"","js":"import firebase from 'firebase/app'\nimport firestore from 'firebase/firestore'\nimport AlpineJS from 'alpinejs'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCD8_bwMiQBhoUqgOyrcBYEF39AjtdLcK4\",\n    authDomain: \"lildb-8ff35.firebaseapp.com\",\n    projectId: \"lildb-8ff35\",\n    storageBucket: \"lildb-8ff35.appspot.com\",\n    messagingSenderId: \"558432690545\",\n    appId: \"1:558432690545:web:88767bbd60e400557b16d0\"\n};\n\nif (firebase.apps.length === 0) {\n\tfirebase.initializeApp(firebaseConfig);\n}\nvar db = firebase.firestore();\n\nvar docRef = db.collection(\"mateo\")\n    \n\nwindow.gistsData = function() {\n  return {\n    gists: [],\n    addItem: async function() {\n    \tconsole.log('yes')\n        const label = prompt('Enter a label')\n        const value = prompt('Enter a value')\n        await docRef.add({ label, value })\n      \tthis.init();\n    },\n    reload() {\n      sessionStorage.removeItem(\"gists\");\n      this.gists = [];\n      this.init();\n    },\n    init() {\n        docRef.get().then(res => {\n            const data = res.docs.map(d =>({ \n            \tid: d.id, // include id for templating\n                ...d.data() \n            }))\n            console.log(data)\n            this.gists = data\n        })\n        return\n    }\n  };\n}","fields":[]},"final":{"html":"<div \n     class=\"bg-gray-900 text-gray-100 py-8 mb-8\" \n     x-data=\"gistsData()\"  \n     x-init=\"init()\"\n>\n    <div class=\"container\">\n      <header class=\"flex items-center mb-3\">\n       <h1 class=\"font-bold flex-grow\">lildb</h1>\n        <button\n           class=\"py-2 px-4 rounded bg-blue-900 flex-grow-0\"\n           type=\"button\"\n           x-on:click=\"reload()\"\n        >\n         Reload\n        </button>   \n      </header>\n\n      <ul class=\"grid grid-cols-4 lg:grid-cols-8 gap-3\">\n        <template x-for=\"gist in gists\" :key=\"gist.label\">\n          <li class=\"bg-gray-800 p-4 text-xl font-bold rounded shadow flex flex-col\">\n            <span x-text=\"gist.label\"></span>\n            <span x-text=\"gist.type\" class=\"text-xs font-medium mb-2\"></span>\n            <span x-text=\"gist.value\" class=\"text-5xl\"></span>\n          </li>\n        </template>\n          <li class=\"bg-gray-800 text-xl font-bold rounded shadow flex flex-col hover:bg-gray-700 transition-colors duration-100\">\n            <button @click=\"addItem()\" class=\"text-gray-200 h-full text-sm font-semibold transition-colors duration-100\">+ new</button>\n          </li>\n      </ul>\n    </div>\n</div>\n","css":"","js":"\n      const primo = {\n        id: '51joo',\n        data: {\"id\":\"51joo\"},\n        fields: []\n      }\n      // turn [import _ from 'lodash'] into [import _ from 'https://cdn.skypack.dev/lodash'];\n      import firebase from 'https://cdn.skypack.dev/firebase/app'\nimport firestore from 'https://cdn.skypack.dev/firebase/firestore'\nimport AlpineJS from 'https://cdn.skypack.dev/alpinejs'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCD8_bwMiQBhoUqgOyrcBYEF39AjtdLcK4\",\n    authDomain: \"lildb-8ff35.firebaseapp.com\",\n    projectId: \"lildb-8ff35\",\n    storageBucket: \"lildb-8ff35.appspot.com\",\n    messagingSenderId: \"558432690545\",\n    appId: \"1:558432690545:web:88767bbd60e400557b16d0\"\n};\n\nif (firebase.apps.length === 0) {\n\tfirebase.initializeApp(firebaseConfig);\n}\nvar db = firebase.firestore();\n\nvar docRef = db.collection(\"mateo\")\n    \n\nwindow.gistsData = function() {\n  return {\n    gists: [],\n    addItem: async function() {\n    \tconsole.log('yes')\n        const label = prompt('Enter a label')\n        const value = prompt('Enter a value')\n        await docRef.add({ label, value })\n      \tthis.init();\n    },\n    reload() {\n      sessionStorage.removeItem(\"gists\");\n      this.gists = [];\n      this.init();\n    },\n    init() {\n        docRef.get().then(res => {\n            const data = res.docs.map(d =>({ \n            \tid: d.id, // include id for templating\n                ...d.data() \n            }))\n            console.log(data)\n            this.gists = data\n        })\n        return\n    }\n  };\n} \n    "}}}]}]},{"id":"cpepv","width":"contained","columns":[{"id":"upxwf","size":"w-full","rows":[{"id":"zzt1v","type":"content","value":{"html":"<h2>Current Functionality </h2><ul><li><p>Retrieve and display documents from a collection called ‘mateo’</p></li><li><p>Create and save new values using `window.prompt()`</p><p><br></p></li></ul><h2>MVP should probably have</h2><h3>A standard api for retrieving and modifying data (guessing a cloud function should work it). </h3><p><strong>i.e. To access all objects: </strong><em>GET or POST https://lildb.com/xxxxx</em></p><p><strong>To access individual object:</strong><em><strong> </strong>GET or POST https://lildb.com/xxxxx/object-id</em></p><p>Other things? </p><h3><br></h3><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p>"}}]}]}],"styles":{"raw":".primo-copy p {\n\t@apply py-2;\n}","final":".primo-copy p {\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n}","tailwind":"{\n  theme: {\n    container: {\n      center: true,\n      padding: '2rem'\n    }\n  },\n  variants: {}\n}"},"wrapper":{"head":{"raw":"","final":""},"below":{"raw":"","final":""}},"fields":[]}